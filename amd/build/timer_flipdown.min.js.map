{"version":3,"sources":["timer_flipdown.js"],"names":["define","$","strings","quizOpenTime","key","component","set_strings","strs","init","selector","arguments","length","undefined","actionlink","cmid","sessionkey","attemptquiz","diffmillisecs","langstrings","Date","getTime","type","rel","href","jQuery","getScript","this","startCounter","bind","quizwillstartinabout","attr","form","method","action","name","value","id","class","disabled","divsection","prepend","prop","FlipDown","theme","start","ifEnded","activateAttempt","find","currentTime","countDownTime","hide","show","setTimeout"],"mappings":"aAsBAA,OAAA,CAAA,UAAA,SAAAC,GACA,IAAAC,EACSC,EACL,MAAID,CACAC,WAAJ,SAAAC,EAAAC,EAAA,GACO,OAAAH,EAAAE,IACiDE,YAAA,SAAAC,GAChDL,EAAeE,GAKnBI,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAAC,EAAA,EAAAC,UAAAC,aAAAC,IAAA,EAAA,EAAA,kBAAAC,EAAA,EAAAH,UAAAC,OAAA,OAAAC,EAAAE,EAAA,EAAAJ,UAAAC,OAAA,OAAAC,EAAAG,EAAA,EAAAL,UAAAC,OAAA,OAAAC,EAAAI,EAAA,EAAAN,UAAAC,OAAA,OAAAC,EAAAK,EAAA,EAAAP,UAAAC,OAAA,OAAAC,EAAAM,EAAA,EAAAR,UAAAC,OAAA,OAAAC,EACR,GAAA,EAAAX,EAAA,qCAAAU,OACA,OAAA,EAEwBF,KAAAA,YAAqGS,GAAvEL,GAAuE,IAAAM,MAAAC,UAAAH,EAAzCD,EAAAA,UAAaC,SAA4B,QAAbC,KAAa,CAYzGG,KAAM,WAXRC,IAAA,aACFC,KAAA,6CAcJC,OAAOC,UAAU,0CAA2CC,KAAKC,aAAaC,KAAKF,OAX9EpB,IAAAA,EAAYY,EAAAA,WACLA,EAAGW,qBAcT,gDAXNX,EAEKY,WAAK,iBAEGC,EAAA9B,EAFH,UAAA,CAGI+B,OAAA,OALdC,OAAApB,IAOOY,OAWCxB,EAAE,UAAW,CATHoB,KAAC,SAKNa,KAAW,OAAAC,MAAArB,IAIdb,EAAA,UAAW,CAAAoB,KAAA,SAAAa,KAAA,UAGApB,MAAAA,IAGDb,EAAA,MADC,CAEDmC,GAFC,yBAKJnC,EAAA,UAAA,CACCoB,KAAA,SAEGgB,MAAA,oBAAAD,GAAA,qBAEAE,UAFA,EAGHH,MAAAnB,KAENuB,EAASvB,EAAAA,mCAAAA,OAAAA,GAtBrBf,EAAAQ,GAAA+B,QAAAT,EAAA9B,EAAA,UAyBEQ,EAAAA,GAAU+B,QAAcvC,GAG1BA,EAAE,2BAA2BwC,KAAK,YAAY,IAA5Cd,aAAA,WA9DH,IAAAe,SAAAvC,EAAA,IAAA,CAgESwC,MAAE,OACND,SAASvC,CAAAA,GAAY,GAAG,GAA5B,MAEYyC,QAGPC,QAAQnB,KAAKoB,iBAEhB7C,EAAA,aAAmBA,MAArB,GAAuBA,EAAA,aAAkB8C,KAAA,UAApBpC,SAEzBmC,gBAAiB,WACTE,IAAAA,GAAkB7B,IAAJA,MAAWC,UACTjB,EAAe6C,EACf,GAAhBC,EAAAA,aAAmBC,OACjBjD,EAAA,wBAAFiD,OACEjD,EAAA,uBAAFkD,OAAAV,KAAA,YAAA,IAGAW,WAAA1B,KAAAoB,gBAAA","file":"timer_flipdown.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implementaton of the quizaccess_delayed timer JScript.\n * Based on quizaccess_activateattempt https://github.com/IITBombayWeb/moodle-quizaccess_delayed/tree/v1.0.3\n *\n * @package   quizaccess_delayed\n * @author    Juan Pablo de Castro\n * @copyright 2020 University of Valladolid, Spain\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine( ['jquery'], function ($) {\n    var strings;\n    var quizOpenTime;\n    return {\n        get_string: function (key, component, param = null) {\n            return strings[key];\n        },\n        set_strings: function (strs) {\n            strings = strs;\n        },\n        /**\n         * Init function.\n         * @param selector for inserting the counter. Defaults '.continuebutton'\n         */\n        init: function (selector = '.continuebutton', actionlink, cmid, sessionkey, attemptquiz, diffmillisecs, langstrings) {\n            if ($('.quizattempt #delayednotification').length > 0) {\n                return false;\n            }\n            // Initialize strings to avoid json requests.\n            this.set_strings(langstrings);\n            quizOpenTime = new Date().getTime() + diffmillisecs;\n\n            // Load flipboard.\n            $('<link>')\n                .appendTo('head')\n                .attr({\n                    type: 'text/css',\n                    rel: 'stylesheet',\n                    href: 'accessrule/delayed/flipdown/flipdown.css'\n                });\n            jQuery.getScript('accessrule/delayed/flipdown/flipdown.js', this.startCounter.bind(this));\n            // Containes for counter.\n            var divcounter = $('<center>'\n                + langstrings.quizwillstartinabout\n                + '<div id=\"flipdown\" class=\"flipdown\"></div>'\n                + '<p>' + langstrings.pleasewait + '</p>'\n                + '</center>');\n            var form = $('<form/>', {\n                'method': 'post',\n                'action': actionlink\n                }).append(\n                    $('<input>', {\n                        'type': 'hidden',\n                        'name': 'cmid',\n                        'value': cmid\n                    }),\n                    $('<input>', {\n                        'type': 'hidden',\n                        'name': 'sesskey',\n                        'value': sessionkey\n                    }),\n                    $('<p>', {\n                        'id': 'activatedelayedtimer'\n                    }),\n                    $('<input>', {\n                        'type': 'submit',\n                        'class': 'btn btn-secondary',\n                        'id': 'startAttemptButton',\n                        'disabled': true,\n                        'value': attemptquiz\n                    }));\n            var divsection = $('<div id=\"delayednotification\"/>').append(divcounter);\n            $(selector).prepend(form, $('</br>'));\n            // Insert above other buttons and messages.\n            $(selector).prepend(divsection);\n            $('[id=startAttemptButton]').prop('disabled', true);\n        },\n        startCounter: function () {\n            new FlipDown(quizOpenTime / 1000, {\n                theme: 'dark',\n                headings: ['', '', '', '']\n            })\n                .start()\n                .ifEnded(this.activateAttempt);\n            // Adjust div width.\n            $(\"#flipdown\").width($(\"#flipdown\").find(\".rotor\").length * 32);\n        },\n        activateAttempt: function () {\n            var currentTime = new Date().getTime();\n            var countDownTime = quizOpenTime - currentTime;\n            if (countDownTime < 0) {\n                $('#flipdown').hide();\n                $('#delayednotification').hide();\n                $('#startAttemptButton').show().prop('disabled', false);\n            } else {\n                // Retry in case of a small clock drift.\n                setTimeout(this.activateAttempt, 1000);\n            }\n        }\n    }\n}\n);"]}